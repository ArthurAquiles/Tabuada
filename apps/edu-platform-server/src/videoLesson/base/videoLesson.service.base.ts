/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  VideoLesson as PrismaVideoLesson,
  Subject as PrismaSubject,
} from "@prisma/client";

export class VideoLessonServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.VideoLessonCountArgs, "select">
  ): Promise<number> {
    return this.prisma.videoLesson.count(args);
  }

  async videoLessons<T extends Prisma.VideoLessonFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.VideoLessonFindManyArgs>
  ): Promise<PrismaVideoLesson[]> {
    return this.prisma.videoLesson.findMany<Prisma.VideoLessonFindManyArgs>(
      args
    );
  }
  async videoLesson<T extends Prisma.VideoLessonFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.VideoLessonFindUniqueArgs>
  ): Promise<PrismaVideoLesson | null> {
    return this.prisma.videoLesson.findUnique(args);
  }
  async createVideoLesson<T extends Prisma.VideoLessonCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.VideoLessonCreateArgs>
  ): Promise<PrismaVideoLesson> {
    return this.prisma.videoLesson.create<T>(args);
  }
  async updateVideoLesson<T extends Prisma.VideoLessonUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.VideoLessonUpdateArgs>
  ): Promise<PrismaVideoLesson> {
    return this.prisma.videoLesson.update<T>(args);
  }
  async deleteVideoLesson<T extends Prisma.VideoLessonDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.VideoLessonDeleteArgs>
  ): Promise<PrismaVideoLesson> {
    return this.prisma.videoLesson.delete(args);
  }

  async getSubject(parentId: string): Promise<PrismaSubject | null> {
    return this.prisma.videoLesson
      .findUnique({
        where: { id: parentId },
      })
      .subject();
  }
}
